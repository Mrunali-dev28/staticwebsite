'use client';

import React from 'react';
import { pathforaHelpers } from './LyticsPathfora';

interface PathforaTriggersProps {
  show?: boolean;
  locale?: 'en' | 'hi';
}

export default function PathforaTriggers({ show = false, locale = 'en' }: PathforaTriggersProps) {
  if (!show) return null;

  const handleBreakingNews = () => {
    pathforaHelpers.showBreakingNews(
      locale === 'hi' ? 'рдмреНрд░реЗрдХрд┐рдВрдЧ рдиреНрдпреВрдЬрд╝ рдЕрд▓рд░реНрдЯ' : 'Breaking News Alert',
      locale === 'hi' ? 'рдирд╡реАрдирддрдо рдХрд╣рд╛рдиреА рдореЗрдВ рдмрдбрд╝рд╛ рд╡рд┐рдХрд╛рд╕ред рдФрд░ рдкрдврд╝рдиреЗ рдХреЗ рд▓рд┐рдП рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ!' : 'Major development in the latest story. Click to read more!',
      locale
    );
  };

  const handleNewsletterSignup = () => {
    pathforaHelpers.showNewsletterSignup(locale);
  };

  const handleContentRecommendation = () => {
    pathforaHelpers.showRecommendation(
      locale === 'hi' ? 'рдЖрдкрдХреЗ рд▓рд┐рдП рдЕрдиреБрд╢рдВрд╕рд┐рдд' : 'Recommended for You',
      locale === 'hi' ? 'рдЖрдкрдХреЗ рдкрдврд╝рдиреЗ рдХреЗ рдЗрддрд┐рд╣рд╛рд╕ рдХреЗ рдЖрдзрд╛рд░ рдкрд░, рдЖрдкрдХреЛ рддрдХрдиреАрдХреА рд░реБрдЭрд╛рдиреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдпрд╣ рдХрд╣рд╛рдиреА рдкрд╕рдВрдж рдЖ рд╕рдХрддреА рд╣реИред' : 'Based on your reading history, you might like this story about technology trends.',
      locale
    );
  };

  const handleCustomMessage = () => {
    pathforaHelpers.showMessage({
      id: 'custom-message',
      headline: locale === 'hi' ? 'рд╡рд┐рд╢реЗрд╖ рдкреНрд░рд╕реНрддрд╛рд╡!' : 'Special Offer!',
      message: locale === 'hi' ? 'рдкреНрд░реАрдорд┐рдпрдо рд╕рд╛рдордЧреНрд░реА рд╕рджрд╕реНрдпрддрд╛ рдкрд░ 20% рдХреА рдЫреВрдЯ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред' : 'Get 20% off on premium content subscription.',
      layout: 'modal',
      position: 'center',
      theme: 'light',
      okMessage: locale === 'hi' ? 'рдСрдлрд░ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ' : 'Get Offer',
      cancelMessage: locale === 'hi' ? 'рдмрд╛рдж рдореЗрдВ' : 'Maybe Later'
    });
  };

  const handleResetPopupState = () => {
    pathforaHelpers.resetPopupState(locale);
    alert(locale === 'hi' ? 'рдкреЙрдкрдЕрдк рд╕реНрдерд┐рддрд┐ рд░реАрд╕реЗрдЯ рд╣реЛ рдЧрдИ рд╣реИ!' : 'Popup state has been reset!');
  };

  const handleCheckPopupState = () => {
    const state = pathforaHelpers.getPopupState();
    console.log('Current popup state:', state);
    alert(locale === 'hi' 
      ? `рдкреЙрдкрдЕрдк рд╕реНрдерд┐рддрд┐: ${JSON.stringify(state, null, 2)}` 
      : `Popup state: ${JSON.stringify(state, null, 2)}`
    );
  };

  return (
    <div className="fixed bottom-4 right-4 z-50 bg-white border border-gray-300 rounded-lg shadow-lg p-4 max-w-xs">
      <h3 className="text-sm font-bold text-gray-800 mb-3">
        {locale === 'hi' ? 'ЁЯОп рдЕрд▓рд░реНрдЯреНрд╕' : 'ЁЯОп Alerts'}
      </h3>
      
      <div className="space-y-2">
        <button
          onClick={handleBreakingNews}
          className="w-full text-xs bg-red-500 text-white px-3 py-2 rounded hover:bg-red-600 transition-colors"
        >
          {locale === 'hi' ? 'ЁЯЪи рдмреНрд░реЗрдХрд┐рдВрдЧ рдиреНрдпреВрдЬрд╝' : 'ЁЯЪи Breaking News'}
        </button>
        
        <button
          onClick={handleNewsletterSignup}
          className="w-full text-xs bg-blue-500 text-white px-3 py-2 rounded hover:bg-blue-600 transition-colors"
        >
          {locale === 'hi' ? 'ЁЯУз рдиреНрдпреВрдЬрд╝рд▓реЗрдЯрд░ рд╕рд╛рдЗрдирдЕрдк' : 'ЁЯУз Newsletter Signup'}
        </button>
        
        <button
          onClick={handleContentRecommendation}
          className="w-full text-xs bg-green-500 text-white px-3 py-2 rounded hover:bg-green-600 transition-colors"
        >
          {locale === 'hi' ? 'ЁЯУ░ рд╕рд╛рдордЧреНрд░реА рд╕рд┐рдлрд╛рд░рд┐рд╢' : 'ЁЯУ░ Content Recommendation'}
        </button>
        
        <button
          onClick={handleCustomMessage}
          className="w-full text-xs bg-purple-500 text-white px-3 py-2 rounded hover:bg-purple-600 transition-colors"
        >
          {locale === 'hi' ? 'ЁЯТм рдХрд╕реНрдЯрдо рдЕрд▓рд░реНрдЯ' : 'ЁЯТм Custom Alert'}
        </button>

        {/* Development/Testing buttons */}
        <div className="border-t pt-2 mt-3">
          <button
            onClick={handleResetPopupState}
            className="w-full text-xs bg-orange-500 text-white px-3 py-2 rounded hover:bg-orange-600 transition-colors"
          >
            {locale === 'hi' ? 'ЁЯФД рдкреЙрдкрдЕрдк рд░реАрд╕реЗрдЯ' : 'ЁЯФД Reset Popups'}
          </button>
          
          <button
            onClick={handleCheckPopupState}
            className="w-full text-xs bg-gray-500 text-white px-3 py-2 rounded hover:bg-gray-600 transition-colors mt-1"
          >
            {locale === 'hi' ? 'ЁЯУК рд╕реНрдерд┐рддрд┐ рджреЗрдЦреЗрдВ' : 'ЁЯУК Check State'}
          </button>
        </div>
      </div>
      
      <p className="text-xs text-gray-500 mt-3">
        {locale === 'hi' 
          ? 'рдпреЗ рдмрдЯрди рдкрдердлреЛрд░рд╛ рдЕрдиреБрднрд╡реЛрдВ рдХреЛ рдЯреНрд░рд┐рдЧрд░ рдХрд░рддреЗ рд╣реИрдВ' 
          : 'These buttons trigger Pathfora experiences'
        }
      </p>
    </div>
  );
} 